/**
 * @file mainpage.dox
 *
 * @mainpage
 *
 * @section purpose Purpose
 * The Encoder class enables the user to implement multiple encoders without
 * needing to rewrite code for each one. All encoders can run and be read from
 * independently.
 *
 * @section usage Usage
 * An Encoder object is constructed by providing the pin objects, timer ID, and
 * timer channels corresponding to the pins to which the physical encoder is
 * attached. Best results occur when the read() function is called often. The
 * encoder can be zeroed at any position chosen by the user. Please see
 * encoder.Encoder which is part of the \ref encoder package.
 * 
 * @section testing Testing
 * The Encoder class was tested manually with a physical encoder. The read()
 * function was called at a high frequency (100 Hz).
 * 
 * @section bugs_and_limitations Bugs and Limitations
 * The Encoder class handles timer counter underflow/overflow correctly only
 * when the read() function is called at a high enough frequency, determined as
 * a function of the speed at which the motor spins. Best results are produced
 * when the read() function is called as frequently as reasonable.
 *
 * @section location Location
 * https://github.com/rahul-go/Mechatronics-LAB/tree/master/Lab%201
 *
 * @author Rahul Goyal, Cameron Kao, Harry Whinnery
 *
 * @copyright License Info
 *
 * @date January 24, 2019
 */